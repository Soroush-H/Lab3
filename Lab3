1.

for $x in doc('mondial/mondial.xml')/mondial/country
for $y in doc('mondial/mondial.xml')/mondial/sea
where $y/name = "Baltic Sea" and $x/@car_code = tokenize($y/@country, " ")
return tokenize($x/@capital, '-')

2.

let $list :=
  for $x in /mondial/desert
  order by $x/latitude descending
  return $x

return ('name= ', $list[1]/name , ' area=', $list[1]/area)

3.

5. 

let $continents :=
  for $x in doc('mondial/mondial.xml')/mondial/continent
  where $x/area > 9000000
  return lower-case($x/name)

let $cities1 :=
  for $x in doc('mondial/mondial.xml')/mondial/country/province/city
  where $x/latitude >= -35 and $x/latitude <= 35 
  and $x/../../encompassed[1]/@continent = $continents
  return <cont cont = "{data($x/../../encompassed[1]/@continent)}"/>
  
let $cities2 :=
  for $x in doc('mondial/mondial.xml')/mondial/country/city
  where $x/latitude >= -35 and $x/latitude <= 35
  and $x/../encompassed[1]/@continent = $continents
  return <cont cont = "{data($x/../encompassed[1]/@continent)}"/>

return
  for $values in $continents
  let $count1 := count($cities1[@cont = $values])
  let $count2 := count($cities2[@cont = $values])
  return concat($values," ",$count1 + $count2)


7. 

for $x in doc('mondial/mondial.xml')/mondial/organization
for $y in doc('mondial/mondial.xml')/mondial/country
where contains($x/name, 'Nuclear') and not(exists($x/established)) and $y/name = tokenize($x/@headq, '-')[2] and $y/encompassed/@continent = 'europe' return $x/name


8.

10.


(: Give names of all the countries (recursively) reachable from Sweden via bordersÂ’ :)
declare function local:reachableFrom($countries as element(country)*, $oldreachable as element(country)*){
    let $newreachable :=
        for $allCountries in $countries
        for $countryReach in $oldreachable
        where $countryReach/border/@country = $allCountries/@car_code
        return $allCountries
 
    let $new := $newreachable union $oldreachable
    return if (count($oldreachable) = count($new)) then $new
    else local:reachableFrom($countries, $new)
};
 
let $countryData :=
  let $countries := /mondial/country
  let $country := $countries[name='Sweden']
  return local:reachableFrom($countries, $country)
 
return $countryData/name
